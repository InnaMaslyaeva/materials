# 16 - 151
''' Алгоритм вычисления функции F(n),
 где n – неотрицательное число, задан следующими соотношениями:
F(n) = n, при n ≤ 10
F(n) = 1, при n ≥ 10000
F(n) = n % 10 + F(n+2), при 10 < n < 10000 и четном значении n,
F(n) = F(n–2) – (n–1) % 10, при 10 < n < 10000 и нечетном значении n.
Чему равно значение выражения F(4500) + F(5515)?
В ответе запишите только целое число.
Примечание: операция a % b находит остаток
от деления числа a на число b.'''
# 4

##a = [0]* 10100
##for n in range(1, 10100):    
##   if  n <= 10: a[n] = n    
##   elif 10 < n < 10000 and n%2==0: a[n] = n%10 + a[n+2]
##   elif 10 < n < 10000 and n%2==1: a[n] = a[n-2] - (n-1)%10
##   elif n >= 10000:  a[n] = 1 
##
##x2 = a[4500]
##x1 = a[5515]
##print('*', a[4498], a[4502], a[4500], a[5515])
##print( '**', a[4500] + a[5515]) 

#------------------------
# вызов библиотек
from functools import lru_cache
import sys

@lru_cache(None) # управление кэшированием значений функции
def F(n):
    if n <= 10 : return n      
    elif 10 < n < 10000 and n%2==0: return n%10 + F(n+2)
    elif 10 < n < 10000 and n%2==1: return F(n-2) - (n-1)%10 
    elif n >= 10000: return 1  
     
# основная программа
sys.setrecursionlimit(6000) # увеличиваем объем памяти под наши рекурсионные значения
##x2 = F(4500)
##x1 = F(5515)
print( '**', F(4500) + F(5515) )











