# 17 - 386

''' В файле 17-386.txt содержится последовательность
целых неотрицательных чисел, не превышающих 10000.
Определите количество троек элементов последовательности,
в которых каждое  число содержит цифру 3 в десятичной записи,
а сумма элементов такой тройки является простым числом.
В ответе запишите два числа:
сначала количество найденных троек,
затем минимальную сумму элементов таких троек.
В данной задаче под тройкой подразумевается
три идущих подряд элемента последовательности.'''
# k= 13 smin= 4327

def prime(x):
    f = True
    for d in range(2, x):
        if x%d == 0: return False
    print('prime:', x) 
    return True   

s = [int(x) for x in open('17-386.txt')]
print(f' {s[:5:]= } ')

#s = s[:100:]
k = 0
smin = 10000000000000000000
for i in range(len(s) - 2):
    # каждое  число содержит цифру 3 в десятичной записи
    if '3' in str(s[i]) and \
       '3' in str(s[i+1]) and \
       '3' in str(s[i+2]):
        # сумма элементов такой тройки является простым числом
        if prime(s[i]+s[i+1]+s[i+2]) == True:
            k += 1
            print(f'{k= } {s[i]= } {s[i+1]= } {s[i+2]= }'  )
            smin = min(smin, s[i]+s[i+1]+s[i+2])

print(f'*** {k= } {smin= } '  )
