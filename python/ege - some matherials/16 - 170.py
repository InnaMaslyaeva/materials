# 16 - 170
'''
     Алгоритм вычисления функции F(n), где n – натуральное число,
     задан следующими соотношениями:
F(a, 0) = a;
F(a, b) = F(a–b, b), если a ≥ b > 0;
F(a, b) = F(b, a), если a < b.
Определите количество таких чисел n, принадлежащих отрезку
100 000 000 ≤ n ≤ 200 000 000,
для которых F(n, 21) = 1.'''

##from functools import lru_cache
##import sys
##
##@lru_cache # управление кэшированием значений функции
##def F(a, b):
##    if b == 0: return a
##    elif a >= b > 0: return F(a-b, b)
##    elif a < b:  return F(b, a)
##     
### основная программа
##sys.setrecursionlimit(200500000) # увеличиваем объем памяти под наши рекурсионные значения
##
##for n in range(100000000, 200000000):
##    print( F(n, 21) )

# 1 сформировываем массив значений для нашей функции:
n = 200_000_002
ar = [0]*n
for num in [num for num in range(n)]:
    x = (num + 1) * 3    
    ar.append(x)        
print('ar=', ar) #ar= [3, 6, 9, 12, 15, 18, 21, 24, 27, 30]...
#  2 перебираем значения и вызываем функцию:
for i in ar:      
    print(i, F(i))
